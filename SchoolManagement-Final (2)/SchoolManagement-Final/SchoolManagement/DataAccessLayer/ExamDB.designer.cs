#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccessLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SchoolDataBase")]
	public partial class ExamDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFinalTermTable(FinalTermTable instance);
    partial void UpdateFinalTermTable(FinalTermTable instance);
    partial void DeleteFinalTermTable(FinalTermTable instance);
    partial void InsertMidTermTable(MidTermTable instance);
    partial void UpdateMidTermTable(MidTermTable instance);
    partial void DeleteMidTermTable(MidTermTable instance);
    partial void InsertFinalTermMarksTable(FinalTermMarksTable instance);
    partial void UpdateFinalTermMarksTable(FinalTermMarksTable instance);
    partial void DeleteFinalTermMarksTable(FinalTermMarksTable instance);
    partial void InsertMidTermMarksTable(MidTermMarksTable instance);
    partial void UpdateMidTermMarksTable(MidTermMarksTable instance);
    partial void DeleteMidTermMarksTable(MidTermMarksTable instance);
    #endregion
		
		public ExamDBDataContext() : 
				base(global::DataAccessLayer.Properties.Settings.Default.SchoolDataBaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ExamDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExamDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExamDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExamDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<FinalTermTable> FinalTermTables
		{
			get
			{
				return this.GetTable<FinalTermTable>();
			}
		}
		
		public System.Data.Linq.Table<MidTermTable> MidTermTables
		{
			get
			{
				return this.GetTable<MidTermTable>();
			}
		}
		
		public System.Data.Linq.Table<FinalTermMarksTable> FinalTermMarksTables
		{
			get
			{
				return this.GetTable<FinalTermMarksTable>();
			}
		}
		
		public System.Data.Linq.Table<MidTermMarksTable> MidTermMarksTables
		{
			get
			{
				return this.GetTable<MidTermMarksTable>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinalTermTable")]
	public partial class FinalTermTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _class;
		
		private string _subject;
		
		private string _department;
		
		private System.Nullable<System.DateTime> _date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnclassChanging(string value);
    partial void OnclassChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void OndepartmentChanging(string value);
    partial void OndepartmentChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    #endregion
		
		public FinalTermTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="class", Storage="_class", DbType="VarChar(50)")]
		public string @class
		{
			get
			{
				return this._class;
			}
			set
			{
				if ((this._class != value))
				{
					this.OnclassChanging(value);
					this.SendPropertyChanging();
					this._class = value;
					this.SendPropertyChanged("@class");
					this.OnclassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="VarChar(50)")]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department", DbType="VarChar(50)")]
		public string department
		{
			get
			{
				return this._department;
			}
			set
			{
				if ((this._department != value))
				{
					this.OndepartmentChanging(value);
					this.SendPropertyChanging();
					this._department = value;
					this.SendPropertyChanged("department");
					this.OndepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MidTermTable")]
	public partial class MidTermTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _class;
		
		private string _subject;
		
		private string _department;
		
		private System.Nullable<System.DateTime> _date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnclassChanging(string value);
    partial void OnclassChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void OndepartmentChanging(string value);
    partial void OndepartmentChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    #endregion
		
		public MidTermTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="class", Storage="_class", DbType="VarChar(50)")]
		public string @class
		{
			get
			{
				return this._class;
			}
			set
			{
				if ((this._class != value))
				{
					this.OnclassChanging(value);
					this.SendPropertyChanging();
					this._class = value;
					this.SendPropertyChanged("@class");
					this.OnclassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="VarChar(50)")]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department", DbType="VarChar(50)")]
		public string department
		{
			get
			{
				return this._department;
			}
			set
			{
				if ((this._department != value))
				{
					this.OndepartmentChanging(value);
					this.SendPropertyChanging();
					this._department = value;
					this.SendPropertyChanged("department");
					this.OndepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinalTermMarksTable")]
	public partial class FinalTermMarksTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _examId;
		
		private string _stuId;
		
		private string _subject;
		
		private System.Nullable<double> _written;
		
		private System.Nullable<double> _mcq;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnexamIdChanging(System.Nullable<int> value);
    partial void OnexamIdChanged();
    partial void OnstuIdChanging(string value);
    partial void OnstuIdChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void OnwrittenChanging(System.Nullable<double> value);
    partial void OnwrittenChanged();
    partial void OnmcqChanging(System.Nullable<double> value);
    partial void OnmcqChanged();
    #endregion
		
		public FinalTermMarksTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_examId", DbType="Int")]
		public System.Nullable<int> examId
		{
			get
			{
				return this._examId;
			}
			set
			{
				if ((this._examId != value))
				{
					this.OnexamIdChanging(value);
					this.SendPropertyChanging();
					this._examId = value;
					this.SendPropertyChanged("examId");
					this.OnexamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stuId", DbType="VarChar(50)")]
		public string stuId
		{
			get
			{
				return this._stuId;
			}
			set
			{
				if ((this._stuId != value))
				{
					this.OnstuIdChanging(value);
					this.SendPropertyChanging();
					this._stuId = value;
					this.SendPropertyChanged("stuId");
					this.OnstuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="VarChar(50)")]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_written", DbType="Float")]
		public System.Nullable<double> written
		{
			get
			{
				return this._written;
			}
			set
			{
				if ((this._written != value))
				{
					this.OnwrittenChanging(value);
					this.SendPropertyChanging();
					this._written = value;
					this.SendPropertyChanged("written");
					this.OnwrittenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mcq", DbType="Float")]
		public System.Nullable<double> mcq
		{
			get
			{
				return this._mcq;
			}
			set
			{
				if ((this._mcq != value))
				{
					this.OnmcqChanging(value);
					this.SendPropertyChanging();
					this._mcq = value;
					this.SendPropertyChanged("mcq");
					this.OnmcqChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MidTermMarksTable")]
	public partial class MidTermMarksTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _examId;
		
		private string _stuId;
		
		private string _subject;
		
		private System.Nullable<double> _written;
		
		private System.Nullable<double> _mcq;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnexamIdChanging(System.Nullable<int> value);
    partial void OnexamIdChanged();
    partial void OnstuIdChanging(string value);
    partial void OnstuIdChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void OnwrittenChanging(System.Nullable<double> value);
    partial void OnwrittenChanged();
    partial void OnmcqChanging(System.Nullable<double> value);
    partial void OnmcqChanged();
    #endregion
		
		public MidTermMarksTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_examId", DbType="Int")]
		public System.Nullable<int> examId
		{
			get
			{
				return this._examId;
			}
			set
			{
				if ((this._examId != value))
				{
					this.OnexamIdChanging(value);
					this.SendPropertyChanging();
					this._examId = value;
					this.SendPropertyChanged("examId");
					this.OnexamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stuId", DbType="VarChar(50)")]
		public string stuId
		{
			get
			{
				return this._stuId;
			}
			set
			{
				if ((this._stuId != value))
				{
					this.OnstuIdChanging(value);
					this.SendPropertyChanging();
					this._stuId = value;
					this.SendPropertyChanged("stuId");
					this.OnstuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="VarChar(50)")]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_written", DbType="Float")]
		public System.Nullable<double> written
		{
			get
			{
				return this._written;
			}
			set
			{
				if ((this._written != value))
				{
					this.OnwrittenChanging(value);
					this.SendPropertyChanging();
					this._written = value;
					this.SendPropertyChanged("written");
					this.OnwrittenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mcq", DbType="Float")]
		public System.Nullable<double> mcq
		{
			get
			{
				return this._mcq;
			}
			set
			{
				if ((this._mcq != value))
				{
					this.OnmcqChanging(value);
					this.SendPropertyChanging();
					this._mcq = value;
					this.SendPropertyChanged("mcq");
					this.OnmcqChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
